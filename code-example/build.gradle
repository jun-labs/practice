buildscript {
    ext {
        snippetsDir = file("build/generated-snippets")
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.8'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'study.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    // SpringBoot
    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-web:2.7.8')
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.7.8')
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.7.8')

    // JDBC
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '2.7.8')

    // JPA, QueryDSL
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation("com.querydsl:querydsl-jpa:${queryDslVersion}")
    implementation("com.querydsl:querydsl-apt:${queryDslVersion}")
    implementation("com.querydsl:querydsl-core:${queryDslVersion}")

    // Webflux
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.7.8')

    // UUID
    implementation('com.fasterxml.uuid:java-uuid-generator:4.1.0')

    // jasypt
    implementation('com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5')

    // Spring Cloud
    implementation('org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE')

    //--------------------------------------------------------------------------

    // MySQL
    implementation(group: 'mysql', name: 'mysql-connector-java', version: '8.0.28')
    runtimeOnly('mysql:mysql-connector-java')

    // Redis
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.redisson:redisson-spring-boot-starter:3.16.8')

    //--------------------------------------------------------------------------

    // Test
    implementation('junit:junit:4.13.2')
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    // AcceptanceTest
    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
    testImplementation('org.springframework.restdocs:spring-restdocs-restassured')
    implementation(group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-stub-runner', version: '2.7.8')
    testImplementation('com.github.tomakehurst:wiremock-jre8-standalone:2.35.0')
    testImplementation('de.skuzzle.springboot.test:spring-boot-wiremock:0.0.18')
    testImplementation('com.squareup.okhttp3:mockwebserver')
    implementation('com.squareup.okhttp3:okhttp:4.10.0')
    testImplementation('com.squareup.okhttp3:mockwebserver:4.10.0')
    implementation('org.testcontainers:localstack:1.16.3')
    implementation('org.apache.commons:commons-lang3:3.9')
    implementation('com.squareup:javapoet:1.11.1')

    //--------------------------------------------------------------------------

    // Lombok
    compileOnly('org.projectlombok:lombok:1.18.22')
    testCompileOnly('org.projectlombok:lombok:1.18.12')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.24')
    annotationProcessor('org.projectlombok:lombok')
    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')

    compileOnly('com.google.auto.service:auto-service:1.0-rc6')
    annotationProcessor('com.google.auto.service:auto-service:1.0-rc6')
    implementation(group: 'com.google.auto.service', name: 'auto-service', version: '1.0')

}

tasks.named('test') {
    useJUnitPlatform()

}

// QueryDSL
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
    asciidoctorExtensions
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
